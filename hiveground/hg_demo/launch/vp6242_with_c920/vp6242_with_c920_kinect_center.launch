<launch>
  <node pkg="tf" type="static_transform_publisher" name="kinect_center_tf" args="0.634019 -0.015773 1.24863 -0.692629 0.713241 0.0795708 -0.0722579 base_link kinect_center_rgb_optical_frame 100" /> 
  

  <include file="$(find openni_launch)/launch/openni.launch">    
    <arg name="camera" value="kinect_center" />
    <!--arg name="device_id" value="A00362814103051A" /-->
    <arg name="device_id" value="A00363807157051A" />
    <arg name="depth_registration" value="true" />
    <arg name="publish_tf" value="false" />
  </include> 
    
  <node name="image_center" pkg="image_view" type="image_view" output="screen">    
    <remap from="image" to="/kinect_center/rgb/image_color" />
  </node>

  <!-- PCL pipeline -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">    
    <remap from="~input" to="/kinect_center/depth_registered/points" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -0.1
      filter_limit_max: 1.6
      filter_limit_negative: False
      leaf_size: 0.01
      output_frame: /base_link
    </rosparam>
  </node>

  <!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="passthrough_x" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/voxel_grid/output" />
    <rosparam>
      filter_field_name: x
      filter_limit_min: -0.1
      filter_limit_max: 0.69
      filter_limit_negative: False
    </rosparam>
  </node>

  <!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="passthrough_y" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/passthrough_x/output" />
    <rosparam>
      filter_field_name: y
      filter_limit_min: -0.65
      filter_limit_max: 0.65
      filter_limit_negative: False
    </rosparam>
  </node>

 
</launch>
