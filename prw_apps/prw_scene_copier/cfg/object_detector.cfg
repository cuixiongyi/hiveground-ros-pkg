#! /usr/bin/env python
# Object detector configuration

PACKAGE='prw_scene_copier'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

# def add (self, name, paramtype, level, description, default = None, min = None, max = None, edit_method = ""):
gen.add ("output_image", bool_t, 0, "Turn on this setting to output the color image with graphical result.", True)
gen.add ("output_cloud", bool_t, 0, "Turn on this setting to output the tranformed cloud.", True)
gen.add ("leaf_size", double_t, 0, "The size of a leaf (on x,y,z) used for downsampling.", 0.01, 0, 1.0)
gen.add ("filter_limit_min", double_t, 0, "The minimum allowed field value a point will be considered from", -0.1, -5.0, 5.0)
gen.add ("filter_limit_max", double_t, 0, "The maximum allowed field value a point will be considered from", 2.0, -5.0, 5.0)
gen.add ("filter_limit_negative", bool_t, 0, "Set to true if we want to return the data outside [filter_limit_min; filter_limit_max].", False)
gen.add ("filter_field_name", str_t, 0, "The field name used for filtering", "z")
gen.add ("sor_min_k", int_t, 0, "Set the number of nearest neighbors to use for mean distance estimation. ", 50, 10, 100)
gen.add ("sor_std_dev", double_t, 0, "Set the standard deviation multiplier for the distance threshold calculation.", 1.0, -3.0, 3.0)





exit(gen.generate(PACKAGE, "object_detector", "ObjectDetector"))